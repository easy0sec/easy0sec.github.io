<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CTF</title>
      <link href="/2025/07/13/ctf/"/>
      <url>/2025/07/13/ctf/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>CTF（<strong>C</strong>apture <strong>T</strong>he <strong>F</strong>lag，夺旗赛）CTF 的前身是传统黑客之间的网络技术比拼游戏，起源于 1996 年第四届 DEFCON，以代替之前黑客们通过互相发起真实攻击进行技术比拼的方式。</p><p>CTF是一种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”，也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式，率先从主办方给出的比赛环境中得到一串具有<code>一定格式的字符串</code>或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为“Flag”。</p><p>flag所表示的为目标服务器上存储的一些<code>敏感机密</code>的信息, 这些信息正常情况下是不能对外暴露的。选手利用目标的一些漏洞，获取到flag，其表示的即为在真实的黑客攻击中窃取到的机密信息。</p><p>一般情况下flag拥有固定格式为<code>flag&#123;xxxxx&#125;</code>，有些比赛会把flag关键词替换，利用固定格式来反推flag也是一种常见的解题思路</p><p>通常来说CTF是以团队为单位进行参赛。每个团队3-5人(具体根据主办方要求决定)，在整个比赛过程中既要每个选手拥有某个方向的漏洞挖掘能力，也要同队选手之间的相互配合。</p><h3 id="FLAG"><a href="#FLAG" class="headerlink" title="FLAG"></a>FLAG</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;c18732f48a96c40d40a06e74b1305706&#125;</span><br></pre></td></tr></table></figure><h2 id="竞赛模式"><a href="#竞赛模式" class="headerlink" title="竞赛模式"></a>竞赛模式</h2><p>CTF竞赛模式具体分为以下几类：</p><h3 id="理论知识"><a href="#理论知识" class="headerlink" title="理论知识"></a>理论知识</h3><p>理论题多见于国内比赛，通常为选择题。包含单选及多选，选手需要根据自己所学的相关理论知识进行作答。最终得出分数。理论部分通常多见于初赛或是初赛之前的海选</p><h3 id="Jeopardy-解题"><a href="#Jeopardy-解题" class="headerlink" title="Jeopardy-解题"></a>Jeopardy-解题</h3><p>参赛队伍可以通过互联网或者现场网络参与，参数队伍通过与在线环境交互或文件离线分析，解决网络安全技术挑战获取相应分值，类似于 ACM 编程竞赛、信息学奥林匹克赛，根据总分和时间来进行排名。</p><p>不同的是这个解题模式一般会设置 一血(First Blood) 、 二血(Second Blood) 、 三血(Third Blood) ，也即最先完成的前三支队伍会获得额外分值，所以这不仅是对首先解出题目的队伍的分值鼓励，也是一种团队能力的间接体现。</p><p>当然还有一种流行的计分规则是设置每道题目的初始分数后，根据该题的成功解答队伍数，来逐渐降低该题的分值，也就是说如果解答这道题的人数越多，那么这道题的分值就越低。最后会下降到一个保底分值后便不再下降。一般称之为<code>动态积分</code></p><p>题目类型主要包含 Web 网络攻防 、 RE 逆向工程 、 Pwn 二进制漏洞利用 、 Crypto 密码攻击以及 Misc 安全杂项 这五个类别，个别比赛会根据题目类型进行扩展。</p><h3 id="AwD-攻防模式"><a href="#AwD-攻防模式" class="headerlink" title="AwD-攻防模式"></a>AwD-攻防模式</h3><p><strong>A</strong>ttack <strong>w</strong>ith <strong>D</strong>efense(AwD)全称攻防模式，在攻防模式CTF赛制中，参赛队伍连接到同一个网络空间。主办方会预先为每个参赛队分配要防守的主机，该主机称之为<code>GameBox</code>，每个队伍之间的GameBox<code>配置及漏洞是完全一致</code>的，选手需要防护自己的GameBox不被攻击的同时挖掘漏洞并攻击对手服务来得分。在AwD中主办方会运行一个名为<code>Checker</code>的程序定时检测选手的GameBox的运行状态。若检测到状态不对则判定该GameBox宕机，按照规则扣除一定分数。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续24至48小时左右），同时也比团队之间的分工配合与合作。</p><p>AwD通常仅包含<code>Web</code>及<code>Pwn</code>两种类型的题目。每个队伍可能会分到多个GameBox，随着比赛的进行，最早的GameBox可能会下线，同时会上线新的GameBox。</p><h3 id="ADP-攻防增强"><a href="#ADP-攻防增强" class="headerlink" title="ADP-攻防增强"></a>ADP-攻防增强</h3><p><strong>A</strong>ttack <strong>D</strong>efense <strong>P</strong>lus(ADP)全称攻防增强模式，在该模式下中，参赛队伍连接到同一个网络空间。主办方会在平台上放置题目，选手需要登录到平台获得题目信息</p><p>攻击模式下，平台会给出题目的访问链接，选手按照解题模式做题提交flag即可完成攻击，当完成攻击后， 每轮计算分数时均会计算该题目的攻击得分。</p><p>防御模式下，选手需要自行挖掘题目的漏洞，并制作漏洞补丁包上传至平台，之后点击验证。验证时平台会新建一个完全干净的题目环境，使用预置的Exploit进行攻击，若攻击成功当验证通过之后（即已经完成修补），每轮计算分数均会认为该题目已防御。</p><p>也就是说，对于每个题目，仅需要攻击成功一次，防御成功一次，该题就可以认为已完成，后续无需进行关注。</p><p>ADP通常仅包含<code>Web</code>及<code>Pwn</code>两种类型的题目。随着比赛的进行，最早的题目可能会下线，后续也有可能会上线新的题目。</p><p>ADP相较于AwD来说，选手无须编写批量攻击脚本，也无需关注题目的环境是否被攻击，是否服务异常等等，要做的只是攻击一次，防御一次，选手可以有更多的时间聚焦于还未完成的题目。从主办方的角度来说，大大减轻了比赛的硬件成本和运维成本。</p><h3 id="RHG-自动化-AI自动化"><a href="#RHG-自动化-AI自动化" class="headerlink" title="RHG-自动化[ AI自动化]"></a>RHG-自动化[ AI自动化]</h3><p><strong>R</strong>obo <strong>H</strong>acking <strong>G</strong>ame(RHG)该利用人工智能或是AI或是自动化攻击程序来全自动的挖掘并利用漏洞，考验选手对于<code>漏洞理解</code>以及<code>工程化</code>能力。比赛开始前(一般为1-4周左右)主办方会给出测试环境以及相关接口文档。选手需要编写自动化程序来请求接口获取题目相关信息，该类程序通常称之为<code>bot</code>，在程序中<code>全自动</code>访问并挖掘目标漏洞，完成利用漏洞攻击并获取flag的过程。获取到的flag也由程序自动化提交。RHG因为是由bot全自动进行工作，所以比赛开始即可视为结束。剩下的一切全看参赛选手编写的自动化bot的工作情况。</p><p>比赛过程中不允许选手对bot进行任何的操作(包括debug&#x2F;patch等等)。选手仅能看到自己的bot完成了哪些题。目前的得分情况等等。</p><h3 id="RW-真实世界"><a href="#RW-真实世界" class="headerlink" title="RW-真实世界"></a>RW-真实世界</h3><p><strong>R</strong>eal <strong>W</strong>orld(RW) 首次于2018年<code>长亭科技</code>主办的RealWorldCTF中出现，该赛制着重考察选手在面对真实的环境下的漏洞挖掘与利用能力。通常RW模式出题也会围绕着能够应用于真实渗透攻击当中的漏洞，一般来说RW常见题型为VM&#x2F;Docker逃逸、针对浏览器的攻击、针对IoT&#x2F;Car等设备的攻击，Web类攻击等等<br>在RW赛制中会有一个<code>Show Time</code>，当选手认为自己已经可以完成题目时，选手可以在比赛平台上提交展示申请，由工作人员根据申请先后顺序进行展示排期。选手展示之前需要上台并连接相关网络，同时现场大屏会切换至目标的正常页面。选手确认连接并测试OK之后开始计时。一般情况下上台攻击的时间为<code>5分钟</code>，选手一旦完成攻击现场大屏幕会实时看到攻击的效果，此时裁判会根据效果是否符合题目要求来判定该题是否完成。如5在攻击时间内依然未能看到展示效果则认为本次攻击失败。现如今为了防止选手恶意排期。通常会有一个队伍总展示次数(例如在2019年数字经济云安全公测大赛中每个队伍只允许上台展示30次)，选手也需要尽可能保证上台之后攻击的成功率</p><p>举个例子。题目要求需要攻击位于比赛网络中的某个网站并将首页替换为包含队伍名称的页面。题目给出该网站的一些信息(源代码&#x2F;数据库等等)，选手经过本地挖掘漏洞之后，提交展示申请，排期到了之后进行上台展示。注意，因为RW模式是以展示效果来作为题目是否完成的准则，所以在RW模式中并<code>不存在Flag</code>。</p><h3 id="KoH-抢占山头"><a href="#KoH-抢占山头" class="headerlink" title="KoH-抢占山头"></a>KoH-抢占山头</h3><p><strong>K</strong>ing <strong>o</strong>f <strong>H</strong>ill(KoH)是近些年新衍生的一种赛制。该赛制有点类似于AwD，但是又和AwD有些不一样。选手面对的是一个黑盒的目标，需要先挖掘漏洞并利用漏洞控制目标。将自己的队伍标识(<code>队伍名称</code>或是<code>Token</code>之类)写入到指定文件。随后在该主机上进行加固等操作防止其他队伍攻击，主办方会定期去检查标识文件，根据文件中的队伍标识来判定本回合分数给予哪个队伍。可以看出KoH也是一种对抗极为激烈的赛制，同时考察选手的渗透能力及防御加固能力。</p><h3 id="Mix-混合"><a href="#Mix-混合" class="headerlink" title="Mix[混合]"></a>Mix[混合]</h3><p>混合模式结合了以上多种模式，现如今单一的赛制已经无法满足比赛及选手的参赛需求，所以大部分比赛会同时以多个模式进行比赛。例如参赛队伍通过解题(Jeopardy)可以获取一些初始分数，然后通过攻防对抗(AwD)进行得分增减的零和游戏，最终以得分高低分出胜负。</p><h2 id="比赛形式"><a href="#比赛形式" class="headerlink" title="比赛形式"></a>比赛形式</h2><p>CTF比赛一般分为线上赛和线下赛。通常来说，线上赛多为<code>初赛</code>, 线下赛多为<code>决赛</code>, 但是也不排除直接进行</p><h3 id="线上"><a href="#线上" class="headerlink" title="线上"></a>线上</h3><p>选手通过主办方搭建的比赛平台在线注册，在线做题并提交flag，线上比赛多为解题模式，攻防模式较为少见。通常来说对于长时间未解出的题目，主办方会酌情给出提示(<code>Hint</code>)来帮助选手做题。</p><h3 id="线下"><a href="#线下" class="headerlink" title="线下"></a>线下</h3><p>选手前往比赛所在地，现场接入比赛网络进行比赛，线下多为AWD模式，近年来随着比赛赛制的不断革新，线下赛也会出现多种模式混合进行，例如结合<strong>解题+AWD</strong> ，<strong>解题+RW</strong> 等等</p><h2 id="题目类型"><a href="#题目类型" class="headerlink" title="题目类型"></a>题目类型</h2><p>在CTF中主要包含以下5个大类的题目，有些比赛会根据自己的侧重点单独添加某个分类，例如<code>移动设备(Mobile)</code>, <code>电子取证(Forensics)</code>等，近年来也会出来混合类型的题目，例如在Web中存在一个二进制程序，需要选手先利用Web的漏洞获取到二进制程序，之后通过逆向或是Pwn等方式获得最终flag</p><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><p>Web类题目大部分情况下和网、Web、HTTP等相关技能有关。主要考察选手对于Web攻防的一些知识技巧。诸如<code>SQL注入</code>、<code>XSS</code>、<code>代码执行</code>、<code>代码审计</code>等等都是很常见的考点。一般情况下Web题目只会给出一个能够访问的URL。部分题目会给出附件</p><h3 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h3><p>Pwn类题目重点考察选手对于<code>二进制漏洞的挖掘和利用</code>能力，其考点也通常在<code>堆栈溢出</code>、<code>格式化漏洞</code>、<code>UAF</code>、<code>Double Free</code>等常见二进制漏洞上。选手需要根据题目中给出的二进制可执行文件进行逆向分析，找出其中的漏洞并进行利用，编写对应的漏洞攻击脚本(<code>Exploit</code>)，进而对主办方给出的远程服务器进行攻击并获取flag通常来说Pwn类题目给出的远程服务器信息为<code>nc IP_ADDRESS PORT</code>，例如<code>nc 1.2.3.4 4567</code>这种形式，表示在<code>1.2.3.4</code>这个IP的<code>4567</code>端口上运行了该题目</p><h3 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h3><p>Re类题目考察选手<code>逆向工程</code>能力。题目会给出一个可执行二进制文件，有些时候也可能是Android的APK安装包。选手需要逆向给出的程序，分析其程序工作原理。最终根据程序行为等获得flag</p><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><p>Crypto类题目考察选手对<code>密码学</code>相关知识的了解程度，诸如<code>RSA</code>、<code>AES</code>、<code>DES</code>等都是密码学题目的常客。有些时候也会给出一个加密脚本和密文，根据加密流程逆推出明文。</p><h3 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h3><p>Misc意为杂项，即不包含在以上分类的题目都会放到这个分类。题目会给出一个附件。选手下载该附件进行分析，最终得出flag</p><p>常见的题型有图片隐写、视频隐写、文档隐写、流量分析、协议分析、游戏、IoT相关等等。五花八门，种类繁多。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/07/13/hello-world/"/>
      <url>/2025/07/13/hello-world/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="b1b4d76f77628a36222fc2b1515b9284b7a7dc8499bec1142e973c5e94253b9b">846ad8ec6e6943494449754732cecabbf1e57bf81db5beb9d8574b6c8441adfa4ac6766659e0fbba60ec2aa128674f75e3273556fec0d6900579d4e8faa760c1a6ed0f6b7178affcec99642f40a615482ed953175aee578a801e7abc08e454add24c7a081732f0ed294171b3c574f82253cf3f56b06bce4400e0c797fc4d7628f5be52577ade3fbbadf9c40a0998baca6b8ba5a5d4dc89dfb545efb51d41edea77232d5cc735b201ebc11dfe991cb21816a714373dd4023340a1302cbbc8b97167f427743086a7c22257e6ed16fa448d3bdf33864d8b749f08e36e0fe6518372447780a3f97d929e512bca880ab032b573c806769052d88321eb8389cecb2b989e74f18c8e6e1464402778c0cfb72deaf5642afb851019b925e04b772d808cd1fb01e9359e3cc63a16d7e1ac809dffd61256c0bc5236d7e154f2562d2551e1902adaf71a142855aeb4690786c90c872cc2146b9b8697b346663301f28f9f0d280dfe5c48cebe9062749fe75b5d48df844661c7b1649c6197ba3075ae60c93f2944ec7d49f7d2463f3c0cafa0794fadf7b225266eaad375bf449c4ae4f598a04875bfdf494e3c8696a022beff66e379f5b1345c8ac3cef61c23d056b213e3a627731ffe4647964ba3bac825eec28509df95902ad27f3bbd86afb41a0302126cdf69262f1de36feb5a6ee8c7248f8d294f60f46cd1aa596501cf35ce8f8f841ea6d606958772acc4bd481ee7cfa08137c786da90726171d1f34cc6051b87a8e9d64aff17d8f84ced7d3d9ac0861f87ccec2096470614532b20f61d39ace1e62ea3f76d2250c7e065aab1b44b451f322ef4136280a6b614955519ec2fb70b5f8cc267049d6cd92a3a8aa1ccf9f4c6fa8c5512462d264ae83d3f48ea20850e396a63f0588bab3aeb9c8b4d2b3fcd56cf1a546613cbd09739a16100c47f1d438512156af871eb1b62290bcb1de6529f3a4ad7f410f66533ee4167f8ca92e6d1c92ea9c77d981960cf34089f0863c1be418f1ac2447c98951433746543d5d95fa3d3d526a364f5da16b2436faab9f6a395d793254fe20ccdc294f8632a5cd1fb839e5c192137804c9b18da1077f738ccca8396ba00661d3fabeb836cb9bc69310a2bd641c74510b27d7c6e280fb33258e887b48dc2fd9d1d8162123ba42ea0bcabffc5aa4db68e1b23b0910ab0ed875b0c49a019c049e36b454ed365293ecfe3c35cab32117c1175e825e2d4b6966657dd5fa7b5fb2b85915cd78fe2d218da5e59ba144e01ec7ffc7ffc100245b743003ef731cd46618dc480376d869bb1c4782c353d4eb637812a8b4abff5ccfd95ca93737ae97cd688113f6f533169093677c4fbb7a86eaab31aad7c0426942ef665dead363950a4e033a16a5a85e30c20af666f33f43be78a0f19281d49f30fd523f5cfa1d9ae8ec21285ce0bdf378facf27eadcf4c976acf805f4c1902383115cee1d23d713707169ab4df63504f7e3d255f00e5fc86138f3564cc87314df88c75aaef589a949ff7c12b8599ccd12dd9b4f4047afb8441f930372d208ee9636a71edcaab1e9e9cd3f4ed2386645495a69ae013e4c6b9363ba18b6772b64d324bc69bed9ca4138879d454bd8fc4ad8edde00d7d12d85c62008da27f07e7241fe3066bc64c37f0c27033e139abb74ab03a15fcfec30dc6a84d97642242177d2e73108ed95fa8835d97c4b2bb18a2b95c50165326bb7ab3098672f49b4850809c655d43acbd62c17fcb10ddc7f846a6e8f8298b4b279174781dd88622f693ce6029dddb9914397f76c4d95397a5b1ea51fa028c85d8ac1f05ca2e271c2a9de1317aa375a72d6531d27c0713a04a405aa74da471406018c987cf4f346b0536278b52abed04c55765f2b21f09268942ebf4ada33f8d755a43aea90bc79685a16a826ad5b77735821869dc43501eef75395fe4d463843a27827c013586846de58d44c70aa3eb7691c36054908e695d8a251b5dbb98545a44a192b7bc6ea0ce3c1cb01d96280fe9527aa934c90ce1f431be772f61e47e3fcc419096ad06dc8c91d8627df8da7038edd474729541f6854a816c71a125afd9cde0522f7a9990c4b4bc90ad44158ce31c4a1aafb48d7b604eea133c6f03fd5c2f037aa33e897b788e53f99b072e1d668eb141d5e0f431624cb97903ab2da5455126e439e42481f5170ac5797bb40b6be3a803bb1d83463c45070df302db303c4c761a45ecf6d5e832c3cfa3c82ceb3f247f3ef81e2714e971932e398d89f966260ff5a3a6cb3cda9dacb055c9dbd5b43e41eb60b78f1eee9b335a7d4f129b60d26a0d6bf0eca9bd84128407d262134e7dcadff0f11e36e9f1804131e186663f0c0d3ca5cddf7ceac2b6508f0ace5d2e78a59eba59bffe8a5a45b7f01a672f04c8478efc7bf3b76088b180e0378c1a12b3ec496886097272d35c8d6ab8fb95c8ef7eff29d4f2ab5a66a3c80069f2bf52c95e75447bc608684d35792be906f024274597aa824dd66fd74b453f394af9171072e2714a0d3e77129783ca116a371f6c90407d9a5b8bdc7d8c86be2da82a45a9840165cac072ac36980880f6bb74b654dd83a359f80061dd41a4c8d13456df1b0b4d2ea4adb7ce88620137c5ff7204b1f84c85fd765230cb6536412376b301bd70eb75aaaaeba217086ad99637debcb5664745c3bd6633a0ca62a9e3db492e05164df6a97b46ba658b6f7e517283da1d083db32e598f3078872c5e227c23a0482dee71b4b56b17491a34dab37a27589eaf8860730b150c73cc414cd6818dccb147171e4ba290e4ef3f6febd09c642574854ff9e28da9abcbc85745361110ad44672edcd3274b198e4b8162d018b79a1e3d09c83c6e88e2cd8a7d3b076c25a109779b9bb8c085cee6921c6f79b023208b7c8a74918c7be07325a3a0a04948b68428ab1dbe0bc63bdf7fda9cca432853c51a95752f782b8c28ef2ffe09b86d0870f0373f128a45dc7591bb85094d99ecf94758940f53425a792533d5571a5b197d35781066655a558c2cba1ed130ff0d6352cbb4efc7a4bd4ba593b8271c6fc4cecd09cc651ee5d7c1d8181ed9ae07f203bc5a79f94f646c8f184a052d4a14718234e4ea474728c8cfef4f9a8d7a368df1dbd594d5a9584990e60af3db18ee86</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 作为日记加密 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
